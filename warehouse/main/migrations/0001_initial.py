# Generated by Django 4.1.7 on 2023-02-16 20:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Название позиции', max_length=50, null=True, verbose_name='Название')),
                ('measurement_value', models.CharField(blank=True, help_text='В каких единицах запишем количество', max_length=50, null=True, verbose_name='Величина измерения')),
                ('description', models.TextField(blank=True, help_text='Описание позиции', null=True, verbose_name='Описание')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elements', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name_plural': 'Елементы',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='ElementInElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество')),
                ('from_elem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_elems', to='main.element')),
                ('to_elem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_elems', to='main.element')),
            ],
        ),
        migrations.AddField(
            model_name='element',
            name='include',
            field=models.ManyToManyField(blank=True, null=True, through='main.ElementInElement', to='main.element'),
        ),
    ]
